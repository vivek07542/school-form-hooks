{"version":3,"sources":["UI/Input/Input.js","Component/StudentForm/StudentForm.js","Utilities/validity.js","UI/BackDrop/BackDrop.js","UI/Modal/Modal.js","Store/Redux/MarkReducer.js","Component/MarkDetail/MarkDetail.js","Component/StudentSummary/StudentList/StudentList.js","Store/Redux/reducer.js","Component/StudentSummary/StudentSummary.js","Component/MarkSummary/MarkSummary.js","Container/SchoolForm.js","App.js","reportWebVitals.js","Store/Redux/index.js","Store/Saga/saga.js","Store/Saga/MarkSaga.js","Store/Saga/index.js","index.js"],"names":["Input","inputElement","validationError","inputClasses","this","props","componentClasses","inValid","shouldValidate","touched","push","className","elementType","onChange","changed","join","elementConfig","value","options","map","e","key","name","label","Component","StudentForm","useState","studentDetail","firstName","type","placeholder","validation","required","valid","lastName","gender","street","country","state","city","mobileNumber","absolute","email","isEmail","formIsValid","studentForm","setStudentForm","editStudentDetailMode","setEditStudentDetailMode","id","setId","useEffect","updatedstudentDetail","updatedFormElement","states","cities","console","log","editStudentDetailModeObject","updateStudentDetail","editStudentDetail","property","changeCountry","event","updatedFormElementState","find","cntry","target","changeState","updatedFormElementCity","studentDetailArray","config","form","onSubmit","preventDefault","studentData","formIdentifier","submitForm","resetForm","formElement","inputIdentifier","rules","isValid","trim","length","test","isNumeric","checkValidatity","inputChangeHandler","disabled","Backdrop","show","onClick","clicked","Modal","nextProps","nextState","children","modelClosed","style","transform","opacity","ADD_MARK_DETAIL_INIT","ADD_MARK_DETAIL_SUCCESS","SUBMIT_BUTTON_HANDLER_INIT","SUBMIT_BUTTON_HANDLER_SUCCESS","EDIT_MARK_INIT","EDIT_MARK_SUCCESS","addMarkToStudentSuccess","markApp","editMarkMode","activePopup","markDetail","studentId","studentName","initialState","studentMarkObject","markReducer","action","MarkDetail","dispatch","useDispatch","semester","marks","subject","markObtained","addBtnDisable","subBtnDisable","markState","setMarkState","setEditMarkMode","undefined","updatedStateEditCondition","array","editMarks","index","object","onChangeHandler","subjectMark","validityCheck","formValidityCheck","resetState","markContentDetail","markData","markObject","markAction","inputClasse","inputClass","values","splice","subractButtonHandler","StudentList","eachChild","address","editClick","deleteClick","addClick","INIT","STUDENT_DETAIL_SUBMIT_INIT","STUDENT_DETAIL_SUBMIT_SUCCESS","EDIT_STUDENT_DETAIL_INIT","EDIT_STUDENT_DETAIL_SUCCESS","DELETE_STUDENT_DETAIL_INIT","DELETE_STUDENT_DETAIL_SUCCESS","editStudentMarksMode","initState","addStudentMarkObject","reducer","StudentSummary","student","details","formAction","MarkSummary","editStudentMark","editObject","markSummary","score","SchoolForm","useSelector","MarkReducer","studentDetailObject","App","reportWebVitals","onPerfEntry","Function","then","getCLS","getFID","getFCP","getLCP","getTTFB","combineReducers","initilizerHandlerSaga","submitFormHandlerSaga","editStudentDetailHandlerSaga","deleteStudentDetailHandlerSaga","window","localStorage","clear","schoolApp","setItem","JSON","stringify","localValue","parse","getItem","updateValue","editObjIndex","findIndex","studentLast","expenseLastItem","put","editObj","localMarkValue","updateMarkValue","actionMarkType","addMarkDetailHandlerSaga","addMarkToStudentSaga","editStudentMarkSaga","mark","watch","takeLatest","actionType","sagaMiddleware","createSagaMiddleware","composeEnhancers","__REDUX_DEVTOOLS_EXTENSION_COMPOSE__","compose","store","createStore","rootReducer","applyMiddleware","run","ReactDOM","render","document","getElementById"],"mappings":"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","file":"static/js/main.75191022.chunk.js","sourcesContent":["import React, { Component } from \"react\";\r\n// import DropDown from \"../DropDown/DropDown\";\r\nimport \"./Input.css\";\r\n\r\nclass Input extends Component{\r\n    render(){\r\n        let inputElement = null;\r\n        let validationError = null;\r\n        const inputClasses = [this.props.componentClasses];\r\n        if(this.props.inValid && this.props.shouldValidate && this.props.touched){\r\n            inputClasses.push(\"is-invalid\");\r\n            validationError = <p className = \"invalid-feedback\">Please Enter a Valid Value !</p>\r\n        }\r\n        if(!this.props.inValid && this.props.shouldValidate && this.props.touched){\r\n            inputClasses.push(\"is-valid\");\r\n            validationError = <p className = \"valid-feedback\">Looks Good!</p>\r\n        }\r\n        switch (this.props.elementType) {\r\n            case (\"input\"):\r\n                inputElement = <input \r\n                 onChange = {this.props.changed}\r\n                    className = {inputClasses.join(' ')}\r\n                  {...this.props.elementConfig}\r\n                    value={this.props.value}\r\n                />\r\n                break\r\n            case (\"textarea\"):\r\n                inputElement = \r\n                <textarea\r\n                 onChange = {this.props.changed}\r\n                 {...this.props.elementConfig}\r\n                   className = {inputClasses.join(' ')} \r\n                   value={this.props.value}\r\n                />\r\n                break\r\n                case (\"select\"):\r\n                    inputElement =\r\n                    <select   value={this.props.value} onChange={this.props.changed} className = {inputClasses.join(' ')} {...this.props.elementConfig}>\r\n                    <option>{this.props.value}</option>\r\n                    {this.props.elementConfig.options.map((e, key) => {\r\n                        return <option key={key} value={e.name}>{e.name}</option>;\r\n                    })}\r\n                    </select>\r\n                break\r\n                case (\"citySel\"):\r\n                    inputElement =\r\n                    <select value= {this.props.value} onChange={this.props.changed} className = {inputClasses.join(' ')} {...this.props.elementConfig}>\r\n                    <option>{this.props.value}</option>\r\n                         {this.props.elementConfig.options.map((e, key) => {\r\n                          return <option key={key} value={e}>{e}</option>;\r\n                    })}\r\n                    </select>\r\n                break\r\n            default:\r\n                inputElement = <input onChange = {this.props.changed} {...this.props.elementConfig}\r\n                    value={this.props.value}\r\n                />\r\n        }\r\n        return(\r\n            <div className=\"form-row Input justify-content-center align-items-start \">\r\n            <div className=\"col-md-4 mb-1 form-inline \">\r\n                    <div className=\"col-5\">\r\n                        <label>{this.props.label}</label>\r\n                    </div>\r\n                    <div className=\"col-7\">\r\n                         {inputElement}\r\n                         {validationError}\r\n                    </div>\r\n            </div>\r\n        </div>\r\n\r\n        )\r\n    }\r\n}\r\nexport default Input;","import React, { useState,useEffect } from 'react';\r\nimport Input from \"../../UI/Input/Input\";\r\nimport {checkValidatity} from \"../../Utilities/validity\";\r\n\r\nconst StudentForm = (props) =>{\r\n    const[studentForm,setStudentForm] = useState({\r\n        studentDetail: {\r\n            firstName: {\r\n                elementType: 'input',\r\n                elementConfig: {\r\n                    type: 'text',\r\n                    placeholder: 'First Name',\r\n                },\r\n                className: \"form-control mb-2\",\r\n                value: \"\",\r\n                label: \"First name\",\r\n                validation:{\r\n                    required : true\r\n                },\r\n                valid:false,\r\n                touched :false\r\n            },\r\n            lastName: {\r\n                elementType: 'input',\r\n                elementConfig: {\r\n                    type: 'text',\r\n                    placeholder: 'Last Name',\r\n                },\r\n                className: \"form-control mb-2\",\r\n                value: \"\",\r\n                label: \"Last name\",\r\n                validation:{\r\n                    required : true\r\n                },\r\n                valid:false,\r\n                touched :false\r\n            },\r\n            gender: {\r\n                elementType : \"select\",\r\n                elementConfig : {\r\n                    placeholder: \"Select Gender\",\r\n                  options:[\r\n                  { name : \"Male\"},\r\n                  { name : \"Female\"},]\r\n                },\r\n                className:\"form-control mb-2\",\r\n                label : \"Gender\",\r\n                value: \"--Choose Gender--\",\r\n                valid:false,\r\n                validation:{},\r\n                touched :false\r\n            },\r\n            street: {\r\n                elementType: \"textarea\",\r\n                elementConfig: {\r\n                    type: \"text\",\r\n                    placeholder: \"Street\",\r\n                },\r\n                className: \"form-control mb-2\",\r\n                value: \"\",\r\n                label: \"Street\",\r\n                validation:{\r\n                    required : true\r\n                },\r\n                valid:false,\r\n                touched :false\r\n            },\r\n            country: {\r\n                elementType: \"select\",\r\n                elementConfig: {\r\n                    placeholder: \"Country\",\r\n                    options:[]\r\n                },\r\n                className: \"form-control mb-2\",\r\n                label: \"Country\",\r\n                value : \"--Choose Country--\",\r\n                validation:{\r\n                    required : true\r\n                },\r\n                valid:false,\r\n                touched :false\r\n            },\r\n            state: {\r\n                elementType: \"select\",\r\n                elementConfig: {\r\n                    placeholder: \"State\",\r\n                    options:[]                    \r\n                },\r\n                className: \"form-control mb-2\",\r\n                label: \"State\",\r\n                value : \"--Choose State--\",\r\n                validation:{\r\n                    required : true\r\n                },\r\n                valid:false,\r\n                touched :false\r\n            },\r\n            city: {\r\n                elementType: \"citySel\",\r\n                elementConfig: {\r\n                    placeholder: \"City\",\r\n                    options : []\r\n                },\r\n                className: \"form-control mb-2\",\r\n                label: \"City\",\r\n                value : \"--Choose City--\",\r\n                validation:{\r\n                    required : true\r\n                },\r\n                valid:false,\r\n                touched :false\r\n            },\r\n            mobileNumber: {\r\n                elementType: \"input\",\r\n                elementConfig: {\r\n                    type: \"number\",\r\n                    placeholder: \"Mobile Number\",\r\n                },\r\n                className: \"form-control mb-2\",\r\n                value: \"\",\r\n                label: \"Mobile Number\",\r\n                validation:{\r\n                    required : true,\r\n                    absolute : 10\r\n                },\r\n                valid:false,\r\n                touched :false\r\n\r\n            },\r\n            email: {\r\n                elementType: \"input\",\r\n                elementConfig: {\r\n                    type: \"email\",\r\n                    placeholder: \"Your E-Mail\",\r\n                },\r\n                className: \"form-control mb-2\",\r\n                value: \"\",\r\n                label: \"E-Mail Address \",\r\n                validation:{\r\n                    required : true,\r\n                    isEmail:true\r\n                },\r\n                valid:false,\r\n                touched :false\r\n            }\r\n        },\r\n        formIsValid: false,\r\n        // editStudentDetailMode : false,\r\n        // id : null\r\n    })\r\n    // const[formIsValid,setFormIsValid] = useState(false);\r\n    const[editStudentDetailMode , setEditStudentDetailMode] = useState(false);\r\n    const[id , setId] = useState(null);\r\n\r\n    useEffect(() => {\r\n        const updatedstudentDetail = { ...studentForm.studentDetail };\r\n        for(let key in updatedstudentDetail){\r\n            if(key === \"country\"){\r\n                const updatedFormElement = { ...updatedstudentDetail[key]};\r\n                updatedFormElement.elementConfig.options = [\r\n                    {\r\n                        name: 'Germany',\r\n                        states: [\r\n                            { name: 'A', cities: ['Duesseldorf', 'Leinfelden-Echterdingen', 'Eschborn'] }\r\n                        ]\r\n                    },\r\n                    {\r\n                        name: 'Spain',\r\n                        states: [\r\n                            { name: 'B', cities: ['Barcelona'] }\r\n                        ]\r\n                    },\r\n                    {\r\n                        name: 'USA',\r\n                        states: [\r\n                            { name: 'California', cities: [\"Los Angeles\", \"San Diego\"] },\r\n                            { name: 'Texas', cities: [\"Dallas\", \"Austin\"] },\r\n                        ]\r\n                    },\r\n                    {\r\n                        name: 'Mexico',\r\n                        states: [\r\n                            { name: 'D', cities: ['Puebla'] }\r\n                        ]\r\n                    },\r\n                    {\r\n                        name: 'India',\r\n                        states: [\r\n                            { name: \"Assam\", cities: [\"Dispur\", \"Guwahati\"] },\r\n                            { name: \"Gujarat\", cities: [\"Vadodara\", \"Surat\", \"Bharuch\"] },\r\n                            { name: \"Madhya Pradesh\", cities: [\"Indore\", \"Gwalior\", \"Bhopal\", \"Guna\"] },\r\n                        ]\r\n                    },\r\n                ]\r\n                updatedstudentDetail[key] = updatedFormElement;\r\n                setStudentForm({...studentForm,studentDetail : updatedstudentDetail});\r\n            }\r\n        }\r\n    },[])\r\n\r\n    useEffect(() => {\r\n        if(editStudentDetailMode !== props.editStudentDetailMode ){\r\n            // setFormIsValid(true);\r\n            console.log(studentForm);\r\n            console.log(props.editStudentDetailModeObject)\r\n            setEditStudentDetailMode(true);\r\n            setId(props.editStudentDetailModeObject.id);\r\n            const updateStudentDetail = {...studentForm.studentDetail};\r\n            const editStudentDetail = props.editStudentDetailModeObject;\r\n            for(let key in updateStudentDetail){\r\n                for(let property in editStudentDetail){\r\n                    if(key === property){\r\n                        updateStudentDetail[key].value = editStudentDetail[property];\r\n                        updateStudentDetail[key].touched = true;\r\n                        updateStudentDetail[key].valid = true;\r\n                    }\r\n                } \r\n            }            \r\n            setStudentForm({...studentForm,studentDetail:updateStudentDetail});\r\n        }\r\n    }, [props.editStudentDetailMode, editStudentDetailMode,props.editStudentDetailModeObject])\r\n\r\n    const inputChangeHandler = (event, inputIdentifier) => {\r\n        const updatedstudentDetail = { ...studentForm.studentDetail};\r\n        const updatedFormElement = { ...updatedstudentDetail[inputIdentifier] };\r\n        updatedFormElement.value = event.target.value;\r\n        if (inputIdentifier === \"country\") {\r\n            changeCountry(event,updatedstudentDetail,updatedFormElement);\r\n        }\r\n        else if (inputIdentifier === \"state\") {\r\n            changeState(event,updatedstudentDetail,updatedFormElement);\r\n        }\r\n        updatedFormElement.valid = checkValidatity(updatedFormElement.value,updatedFormElement.validation)\r\n        updatedFormElement.touched = true;\r\n        updatedstudentDetail[inputIdentifier] = updatedFormElement;\r\n        \r\n        let formIsValid = true;\r\n        for(let inputIdentifier in updatedstudentDetail){\r\n            formIsValid = updatedstudentDetail[inputIdentifier].valid && formIsValid\r\n        }\r\n        setStudentForm({...studentForm,studentDetail : updatedstudentDetail,formIsValid : formIsValid});\r\n    }\r\n    \r\n    const changeCountry = (event,updatedstudentDetail,updatedFormElement) => {\r\n        for(let key in updatedstudentDetail){\r\n            if(key === \"state\"){\r\n                const updatedFormElementState = { ...updatedstudentDetail[key]};\r\n                updatedFormElementState.elementConfig.options = updatedFormElement.elementConfig.options.find(cntry => cntry.name === event.target.value).states;\r\n                updatedstudentDetail[key] = updatedFormElementState;\r\n                setStudentForm({...studentForm,studentDetail : updatedstudentDetail});\r\n            }\r\n        }\r\n    }\r\n\r\n    const changeState = (event,updatedstudentDetail,updatedFormElement) => {\r\n        for(let key in updatedstudentDetail){\r\n            if(key === \"city\"){\r\n                const updatedFormElementCity = { ...updatedstudentDetail[key]};\r\n                updatedFormElementCity.elementConfig.options = updatedFormElement.elementConfig.options.find(cntry => cntry.name === event.target.value).cities;\r\n                updatedstudentDetail[key] = updatedFormElementCity;\r\n                setStudentForm({...studentForm,studentDetail : updatedstudentDetail});\r\n            }\r\n        }\r\n    }\r\n    const resetForm=()=>{\r\n        const updateStudentDetail = {...studentForm};\r\n        for(let key in updateStudentDetail.studentDetail){\r\n            updateStudentDetail.studentDetail[key].valid = false;\r\n            updateStudentDetail.studentDetail[key].touched = false;\r\n            if(key === \"gender\"){\r\n                updateStudentDetail.studentDetail[key].value = \"--Choose Gender--\" \r\n            }        \r\n            else if(key === \"country\"){\r\n                updateStudentDetail.studentDetail[key].value = \"--Choose Country--\" \r\n            }\r\n            else if(key === \"state\"){\r\n                updateStudentDetail.studentDetail[key].value = \"--Choose State--\" \r\n            }\r\n            else if(key === \"city\"){\r\n                updateStudentDetail.studentDetail[key].value = \"--Choose City--\" \r\n            }\r\n            else{\r\n                updateStudentDetail.studentDetail[key].value = \" \";\r\n            }    \r\n        }   \r\n        updateStudentDetail.formIsValid = false;\r\n        setId(null);\r\n        setEditStudentDetailMode(false);\r\n        setStudentForm(updateStudentDetail);\r\n    }\r\n    const submitHandler = (event)=>{\r\n        event.preventDefault();\r\n        const studentData = {};\r\n        console.log(studentForm);\r\n        studentData.id = id;\r\n        for(let formIdentifier in studentForm.studentDetail){\r\n            studentData[formIdentifier] = studentForm.studentDetail[formIdentifier].value;\r\n        }\r\n        props.submitForm(props.editStudentDetailMode,studentData);\r\n        resetForm();\r\n    }\r\n   \r\n        const studentDetailArray = [];\r\n        for (let key in studentForm.studentDetail) {\r\n            studentDetailArray.push({\r\n                id: key,\r\n                config: studentForm.studentDetail[key]\r\n            })\r\n        }\r\n        let form = (\r\n            <div className=\"form-group \">\r\n                <form onSubmit={submitHandler}>\r\n                    {studentDetailArray.map(formElement => (\r\n                        <Input\r\n                            key={formElement.id}\r\n                            elementType={formElement.config.elementType}\r\n                            elementConfig={formElement.config.elementConfig}\r\n                            value={formElement.config.value}\r\n                            componentClasses = {formElement.config.className}\r\n                            inValid = {!formElement.config.valid}\r\n                            touched ={formElement.config.touched}\r\n                            shouldValidate = {formElement.config.validation}\r\n                            label={formElement.config.label}\r\n                            changed={(event) => { inputChangeHandler(event, formElement.id) }}\r\n                        />\r\n                    ))}\r\n                    <div className=\"row justify-content-center\">\r\n                        <button className=\"btn btn-outline-primary my-3\" disabled ={!studentForm.formIsValid}>Save form</button>\r\n                    </div>\r\n                </form>\r\n            </div>\r\n        )\r\n        return (\r\n            <div>\r\n                {form}\r\n            </div>\r\n        )\r\n}\r\nexport default StudentForm;","export const checkValidatity=(value,rules)=>{\r\n    let isValid = true;\r\n\r\n    if(rules.required){\r\n        isValid = value.trim() !=='' && isValid;\r\n    }\r\n    if(rules.absolute){\r\n        isValid = value.length === rules.absolute && isValid;\r\n    }\r\n    if(!rules){\r\n        return true;\r\n    }\r\n    if(rules.isEmail){\r\n        const pattern = /^[a-z0-9._%+-]+@[a-z0-9.-]+\\.[a-z]{2,4}$/;\r\n        isValid = pattern.test(value) && isValid;\r\n    }\r\n    if(rules.isNumeric){\r\n        const pattern = /^\\d+$/;\r\n        isValid = pattern.test(value) && isValid;\r\n    }\r\n    return isValid;\r\n}","import React from 'react'\r\nimport \"./BackDrop.css\";\r\n\r\nconst Backdrop = (props) => (\r\n    props.show ? <div className=\"Backdrop\" onClick={props.clicked}></div> : null\r\n\r\n)\r\n  \r\n\r\n\r\nexport default Backdrop\r\n","import React, { Component } from 'react';\r\nimport \"./Modal.css\";\r\n// import Aux from \"../../../hoc/Auxilary\";\r\nimport Backdrop from \"../BackDrop/BackDrop\";\r\nclass Modal extends Component{\r\n    shouldComponentUpdate(nextProps,nextState){\r\n       return nextProps.show !== this.props.show || nextProps.children !== this.props.children;\r\n    }  \r\n    render(){\r\n        return (\r\n            <>\r\n            <Backdrop show={this.props.show} clicked={this.props.modelClosed}/>\r\n            <div className=\"Modal\"\r\n            style={{\r\n                transform:this.props.show ? \"translateY(0)\" : \"translateY(-100vh)\",\r\n                opacity: this.props.show ? \"1\" : \"0\"\r\n            }}>\r\n                {this.props.children}\r\n            </div>\r\n            </>\r\n        )\r\n    }\r\n}\r\n\r\nexport default Modal\r\n","export const ADD_MARK_DETAIL_INIT = \"ADD_MARK_DETAIL_INIT\"; \r\nexport const ADD_MARK_DETAIL_SUCCESS = \"ADD_MARK_DETAIL_SUCCESS\"; \r\n// export const ADD_BUTTON_HANDLER_INIT = \"ADD_BUTTON_HANDLER_INIT\";\r\n// export const ADD_BUTTON_HANDLER_SUCCESS = \"ADD_BUTTON_HANDLER_SUCCESS\";\r\n// export const SUBRACT_BUTTON_HANDLER_INIT = \"SUBRACT_BUTTON_HANDLER_INIT\";\r\n// export const SUBRACT_BUTTON_HANDLER_SUCCESS = \"SUBRACT_BUTTON_HANDLER_SUCCESS\";\r\nexport const SUBMIT_BUTTON_HANDLER_INIT = \"SUBMIT_BUTTON_HANDLER_INIT\"\r\nexport const SUBMIT_BUTTON_HANDLER_SUCCESS = \"SUBMIT_BUTTON_HANDLER_SUCCESS\"\r\nexport const EDIT_MARK_INIT = \"EDIT_MARK_INIT\";\r\nexport const EDIT_MARK_SUCCESS = \"EDIT_MARK_SUCCESS\";\r\n\r\nexport const addMarkDetailHandler = (id,studentName,activePopup,editMarkMode) =>{\r\n    return{\r\n        type:ADD_MARK_DETAIL_INIT,\r\n        id:id,\r\n        studentName : studentName,\r\n        activePopup:activePopup,\r\n        editMarkMode : editMarkMode\r\n    }\r\n}\r\n\r\nexport const addMarkDetailHandlerSuccess = (markApp,id,studentName) =>{\r\n    \r\n    return{\r\n        type:ADD_MARK_DETAIL_SUCCESS,\r\n        id:id,\r\n        studentName : studentName,\r\n        activePopup : markApp.activePopup,\r\n        editMarkMode : markApp.editMarkMode\r\n    }\r\n}\r\n\r\nexport const addMarkToStudentInit = (editMarkMode,markObject) =>{\r\n    console.log(editMarkMode,markObject)\r\n    return{\r\n        type : SUBMIT_BUTTON_HANDLER_INIT,\r\n        editMarkMode : editMarkMode,\r\n        markObject : markObject\r\n    }\r\n}\r\nexport const addMarkToStudentSuccess = (markApp) =>{\r\n    return{\r\n        type:SUBMIT_BUTTON_HANDLER_SUCCESS,\r\n        editMarkMode : markApp.editMarkMode,\r\n        activePopup:markApp.activePopup,\r\n        markDetail : markApp.markDetail,\r\n        studentId : markApp.studentId,\r\n        studentName : markApp.studentName\r\n    }\r\n}\r\n\r\nexport const editStudentMarkInit = (editObject,editMarkMode)=>{\r\n    console.log(editObject);\r\n    return{\r\n        type : EDIT_MARK_INIT,\r\n        editObject : editObject,\r\n        editMarkMode : editMarkMode\r\n    }\r\n}\r\n\r\nexport const editStudentMarkSuccess = (markApp) =>{\r\n    return{\r\n        type : EDIT_MARK_SUCCESS,\r\n        editMarkMode : markApp.editMarkMode,\r\n        activePopup:markApp.activePopup,\r\n        studentMarkObject:markApp.studentMarkObject,\r\n        studentId : markApp.studentId,\r\n        studentName : markApp.studentName\r\n    }\r\n}\r\n\r\n// export const addButtonHandlerInit = (semester,studentId,id,subject,marks) =>{\r\n//     return{\r\n//         type : ADD_BUTTON_HANDLER_INIT,\r\n//         semester : semester,\r\n//         studentId : studentId,\r\n//         id : id,\r\n//         subject : subject,\r\n//         mark : marks\r\n//     }\r\n// }\r\n// export const addButtonHandlerSuccess = (markApp) =>{\r\n//     return{\r\n//         type : ADD_BUTTON_HANDLER_SUCCESS,\r\n//         markDetail:markApp.markDetail,\r\n\r\n//     }\r\n// }\r\n\r\n// export const subractButtonHandlerInit = (studentId,id) =>{\r\n//     return{\r\n//         type:SUBRACT_BUTTON_HANDLER_INIT,\r\n//         studentId : studentId,\r\n//         id:id\r\n//     }\r\n// }\r\n// export const subractButtonHandlerSuccess = (markApp) =>{\r\n//     return{\r\n//         type:SUBRACT_BUTTON_HANDLER_SUCCESS,\r\n//         markDetail:markApp.markDetail\r\n//     }\r\n// }\r\nconst initialState = {\r\n    activePopup : false,\r\n    studentMarkObject : {},\r\n    editMarkMode : false,\r\n    markDetail : [],\r\n    studentId : \"\",\r\n    studentName : \"\"\r\n}\r\n\r\nconst markReducer = (state=initialState,action) =>{\r\n    switch(action.type){\r\n        case ADD_MARK_DETAIL_SUCCESS : \r\n        return{\r\n            ...state,\r\n            activePopup : action.activePopup,\r\n            studentId:action.id,\r\n            studentName : action.studentName,\r\n            editMarkMode : action.editMarkMode\r\n            \r\n        }\r\n        case SUBMIT_BUTTON_HANDLER_SUCCESS:\r\n            return{\r\n                ...state,\r\n            editMarkMode : action.editMarkMode,\r\n            activePopup : action.activePopup,\r\n            markDetail : action.markDetail,\r\n            studentId : action.studentId,\r\n            studentName : action.studentName    \r\n        }\r\n        case EDIT_MARK_SUCCESS :\r\n            return{\r\n                ...state,\r\n                editMarkMode : action.editMarkMode,\r\n                activePopup:action.activePopup,\r\n                studentMarkObject : action.studentMarkObject,\r\n                studentId : action.studentId,\r\n                studentName : action.studentName \r\n            }\r\n        default : \r\n        return state\r\n    }\r\n}\r\nexport default markReducer;","import React, { useState,useEffect } from 'react'\r\nimport \"./MarkDetail.css\";\r\nimport Modal from \"../../UI/Modal/Modal\";\r\nimport { useDispatch } from 'react-redux';\r\nimport * as markAction from \"../../Store/Redux/MarkReducer\";\r\n\r\nconst MarkDetail = (props) =>{\r\n    const dispatch = useDispatch();\r\n    console.log(props);\r\n\r\n    const[markState,setMarkState] = useState({\r\n        semester: {\r\n            value: \"\",\r\n            touched: false,\r\n            valid: false\r\n        },\r\n        marks: [\r\n            {\r\n                subject: {\r\n                    value: \"\",\r\n                    touched: false,\r\n                    valid: false\r\n                },\r\n                markObtained: {\r\n                    value: \"\",\r\n                    touched: false,\r\n                    valid: false\r\n                }\r\n            }\r\n        ],\r\n        isValid: false,\r\n        addBtnDisable : false,\r\n        subBtnDisable : true\r\n    })\r\n    const[editMarkMode,setEditMarkMode] = useState(false);\r\n    // const[studentName,setStudentName] = useState(\"\");\r\n\r\n    useEffect(() => {      \r\n            if (editMarkMode !== props.editMarkMode && props.editMarkMode !== undefined ) {\r\n                if (props.studentMarkObject !== null) {\r\n                    const updatedStateEditCondition = { ...markState };\r\n                    updatedStateEditCondition.semester.value = props.studentMarkObject.semester;\r\n                    updatedStateEditCondition.semester.touched = true;\r\n                    updatedStateEditCondition.semester.valid = true;\r\n                    setMarkState(updatedStateEditCondition);\r\n                    setEditMarkMode(true);\r\n                    // setStudentName(props.studentName);\r\n                    // setMarkState({...markState,isValid : true,editMarkMode : true,studentName : props.studentName});\r\n                    let array = [];\r\n                    let editMarks = props.studentMarkObject.marks;\r\n                    for(let index in editMarks){\r\n                        let object = {};\r\n                        object.subject = {}\r\n                        object.subject.value = editMarks[index].subject;\r\n                        object.subject.touched = true;\r\n                        object.subject.valid = true;\r\n                        object.markObtained = {};\r\n                        object.markObtained.value = editMarks[index].markObtained\r\n                        object.markObtained.touched = true;\r\n                        object.markObtained.valid = true;\r\n                        array.push(object);\r\n                    }\r\n                    setMarkState({...markState,marks : array});\r\n                }\r\n            }\r\n    }, [markState.editMarkMode,props.editMarkMode,markState,props.studentMarkObject,props.studentName])\r\n    const  inputHandler = (event) => {\r\n        if (event.target.value >= 0 && event.target.value.trim() !== \"\") {\r\n           setMarkState({...markState,\r\n                semester: {\r\n                    value: event.target.value,\r\n                    touched: true,\r\n                    valid: true\r\n                }\r\n            })\r\n        }\r\n        else {\r\n            setMarkState({...markState,\r\n                semester: {\r\n                    value: event.target.value,\r\n                    touched: true,\r\n                    valid: false\r\n                }\r\n            })\r\n        }\r\n    }\r\n    const addButtonHandler = () => {\r\n        const values = [...markState.marks];\r\n        if(values.length <=4){\r\n            setMarkState({...markState,\r\n                marks:[...markState.marks,\r\n                {\r\n                    subject: {\r\n                        value: \"\",\r\n                        touched: false,\r\n                        valid: false\r\n                    },\r\n                    markObtained: {\r\n                        value: \"\",\r\n                        touched: false,\r\n                        valid: false\r\n                    }\r\n                }\r\n            ],\r\n            addBtnDisable : false,\r\n            subBtnDisable : false})\r\n        }\r\n        else {\r\n            setMarkState({...markState,\r\n                marks:\r\n                    [...markState.marks,\r\n                    {\r\n                        subject: {\r\n                            value: \"\",\r\n                            touched: false,\r\n                            valid: false\r\n                        },\r\n                        markObtained: {\r\n                            value: \"\",\r\n                            touched: false,\r\n                            valid: false\r\n                        }\r\n                    }\r\n                ],\r\n                addBtnDisable : true,\r\n                subBtnDisable : false\r\n            })\r\n        }\r\n    }\r\n\r\n    const subractButtonHandler = (index) => {\r\n        const values = [...markState.marks];\r\n        if(values.length === 1){\r\n            setMarkState({...markState,addBtnDisable : false,subBtnDisable : true})\r\n        }\r\n        else{\r\n            values.splice(index, 1);\r\n            setMarkState({...markState , marks: values,subBtnDisable:false,addBtnDisable:false})\r\n        }\r\n    }\r\n\r\n    const onChangeHandler = (index, event) => {\r\n        const subjectMark = [...markState.marks];\r\n        if (event.target.value >= 0 && event.target.value < 101 && event.target.value.trim() !== \"\" && event.target.name === \"markObtained\") {\r\n            subjectMark[index][event.target.name].value = event.target.value;\r\n            subjectMark[index][event.target.name].touched = true;\r\n            subjectMark[index][event.target.name].valid = true\r\n        }\r\n        else if (event.target.value.trim() !== \"\" && event.target.name === \"subject\") {\r\n            subjectMark[index][event.target.name].value = event.target.value;\r\n            subjectMark[index][event.target.name].touched = true;\r\n            subjectMark[index][event.target.name].valid = true\r\n        }\r\n        else {\r\n            subjectMark[index][event.target.name].value = event.target.value;\r\n            subjectMark[index][event.target.name].touched = true;\r\n            subjectMark[index][event.target.name].valid = false\r\n        }\r\n        setMarkState({...markState, marks: subjectMark });\r\n        validityCheck(event);\r\n    }\r\n    const validityCheck = (event) => {\r\n        let formIsValid = true;\r\n        let formValidityCheck = { ...markState.marks }\r\n        for (let inputIdentifier in formValidityCheck) {\r\n            formIsValid = markState.semester.valid && formValidityCheck[inputIdentifier].subject.valid && formValidityCheck[inputIdentifier].markObtained.valid && formIsValid\r\n        }\r\n        setMarkState({...markState,isValid: formIsValid });\r\n    }\r\n    const addMarkToStudent = (event) => {\r\n        event.preventDefault();\r\n        const markData = {};\r\n        markData.studentId = props.studentId;\r\n        markData.studentName = props.studentName;\r\n        markData.semester = markState.semester.value;\r\n        markData.marks = [];\r\n        for (let index in markState.marks) {\r\n            let object = {};\r\n            object.id = +index + 1;\r\n            object.subject = markState.marks[index].subject.value;\r\n            object.markObtained = markState.marks[index].markObtained.value;\r\n            markData.marks.push(object);\r\n        }\r\n        dispatch(markAction.addMarkToStudentInit(editMarkMode, markData)) \r\n        resetState();\r\n    }\r\n    const resetState =() =>{\r\n        setMarkState({...markState,\r\n            semester: {\r\n                value: \"\",\r\n                touched: false,\r\n                valid: false\r\n            },\r\n            marks: [\r\n                {\r\n                    subject: {\r\n                        value: \"\",\r\n                        touched: false,\r\n                        valid: false\r\n                    },\r\n                    markObtained: {\r\n                        value: \"\",\r\n                        touched: false,\r\n                        valid: false\r\n                    }\r\n                }\r\n            ],\r\n            isValid: false,\r\n            addBtnDisable : false,\r\n            subBtnDisable : true\r\n        })\r\n        setEditMarkMode(false);\r\n        // setStudentName(\"\");\r\n    }\r\n\r\n    const inputClasses = [\"form-control mb-2\"];\r\n    if (markState.semester.valid && markState.semester.touched) {\r\n        inputClasses.push(\"is-valid\");\r\n    }\r\n\r\n    if (!markState.semester.valid && markState.semester.touched) {\r\n        inputClasses.push(\"is-invalid\");\r\n    }\r\n    let markContentDetail = (\r\n        <div className=\"form-group\">\r\n            <form onSubmit={addMarkToStudent}>\r\n                <p>{props.studentName}</p>\r\n                <div className=\"form-row Input justify-content-center align-items-start \">\r\n                    <div className=\"col-md-12 mb-2 form-inline \">\r\n                        <label className=\"col-5\">Semester :</label>\r\n                        <input type=\"number\"\r\n                            placeholder=\"Semester\"\r\n                            className={inputClasses.join(' ')}\r\n                            name=\"semester\"\r\n                            value={markState.semester.value}\r\n                            onChange={inputHandler}\r\n                        />\r\n                    </div>\r\n                </div>\r\n                <h3>Marks Detail</h3>\r\n                {markState.marks.map((e, index) => {\r\n                    const inputClasse = [\"col-3 form-control mb-2\"];\r\n                    if (e.subject.valid && e.subject.touched) {\r\n                        inputClasse.push(\"is-valid\");\r\n                    }\r\n                    if (!e.subject.valid && e.subject.touched) {\r\n                        inputClasse.push(\"is-invalid\");\r\n                    }\r\n                    const inputClass = [\"col-3 form-control mb-2\"]\r\n\r\n                    if (e.markObtained.valid && e.markObtained.touched) {\r\n                        inputClass.push(\"is-valid\");\r\n                    }\r\n                    if (!e.markObtained.valid && e.markObtained.touched) {\r\n                        inputClass.push(\"is-invalid\");\r\n                    }\r\n                    return (\r\n                        <div className=\"form-row Input justify-content-between align-items-center\" key={index}>\r\n                            <div className=\"col-md-12 mb-1 form-inline justify-content-between \">\r\n                                <label className=\"col-2 mb-2\">Subject :</label>\r\n                                <select\r\n                                    className={inputClasse.join(' ')}\r\n                                    name=\"subject\"\r\n                                    value={e.subject.value}\r\n                                    onChange={(event) => onChangeHandler(index, event)} >\r\n                                    <option value=\"\" disabled >Select Subject</option>\r\n                                    <option value=\"Physics\"> Physics</option>\r\n                                    <option value=\"Mathamatics\"> Mathamatics</option>\r\n                                    <option value=\"Chemistry\">Chemistry </option>\r\n                                    <option value=\"Economics\"> Economics</option>\r\n                                    <option value=\"Taxation\"> Taxation</option>\r\n                                    <option value=\"Accounts\">Accounts </option>\r\n                                    <option value=\"Moral Values\">Moral Values </option>\r\n                                    <option value=\"History\">History </option>\r\n                                </select>\r\n                                <input\r\n                                    className={inputClass.join(' ')}\r\n                                    type=\"number\"\r\n                                    name=\"markObtained\"\r\n                                    placeholder=\"Marks\"\r\n                                    value={e.markObtained.value}\r\n                                    onChange={(event) => onChangeHandler(index, event)} />\r\n                                <button type=\"button\" className=\"btn btn-outline-primary mb-2 col-1\" disabled = {markState.addBtnDisable} onClick={() => addButtonHandler()}>+</button>\r\n                                <button type=\"button\" className=\"btn btn-outline-primary mb-2 col-1\" disabled = {markState.subBtnDisable} onClick={() => subractButtonHandler(index)}>-</button>\r\n                            </div>\r\n                        </div>\r\n                    )\r\n                })}\r\n                <div className=\"row justify-content-center\">\r\n                    <button className=\"btn btn-outline-primary my-3\" disabled={!markState.isValid}>Save Marks</button>\r\n                </div>\r\n            </form>\r\n        </div>\r\n    )\r\n    return (\r\n        <>\r\n            <Modal show={props.activePopup}>\r\n                {markContentDetail}\r\n            </Modal>\r\n        </>\r\n    )\r\n}\r\nexport default MarkDetail;","import React from 'react'\r\n\r\n// import * as formAction from \"../../../Store/Redux/reducer\";\r\n// import * as markAction from \"../../../Store/Redux/MarkReducer\";\r\n\r\nconst StudentList = (props) => {\r\n    \r\n    const addButtonDisable = false;\r\n\r\n    const editHandler = () => {\r\n        const editStudentDetailMode = true;\r\n        props.editClick(props.id, editStudentDetailMode)\r\n    }\r\n    const deleteHandler = () => {\r\n        props.deleteClick(props.id);\r\n    }\r\n    const addClickHandler = () => {\r\n        const activePopup = true;\r\n        const editStudentMarksMode = false;\r\n        props.addClick(props.id, props.studentName, activePopup,editStudentMarksMode);\r\n    }\r\n    let eachChild = (\r\n        <tr key={props.id}>\r\n            <td>{`enrol${props.id}`}</td>\r\n            <td>{props.studentName}</td>\r\n            <td>{props.gender}</td>\r\n            <td>{props.address}</td>\r\n            <td>{props.country}</td>\r\n            <td>{props.state}</td>\r\n            <td>{props.city}</td>\r\n            <td>{props.mobileNumber}</td>\r\n            <td>{props.email}</td>\r\n            <td>\r\n                <button className=\"btn btn-outline-primary btn-sm\" onClick={editHandler}>Edit</button>\r\n                <button className=\"btn btn-outline-primary btn-sm\" onClick={deleteHandler}>Delete</button>\r\n                <button className=\"btn btn-outline-primary btn-sm\" disabled={addButtonDisable} onClick={addClickHandler}>Add Marks</button>\r\n            </td>\r\n        </tr>\r\n    )\r\n    return (\r\n        <>\r\n            <tbody>\r\n                {eachChild}\r\n            </tbody>\r\n        </>\r\n    )\r\n}\r\nexport default StudentList;\r\n\r\n// import React, { Component } from 'react'\r\n\r\n// export default class StudentList extends Component {\r\n//     state = {\r\n//         activePopup: false,\r\n//         editStudentDetailMode: false,\r\n//         editStudentDetailModeObject: {},\r\n//         editStudentMarksMode: false,\r\n//         addButtonDisable : false,\r\n//     }\r\n\r\n//     editHandler = () => {\r\n//         // State Does Not update Soon as asynchronous for that we have to write callback of updated state\r\n//         this.setState({ editStudentDetailMode: true }, () => {\r\n//             this.props.editClick(this.props.id, this.state.editStudentDetailMode)\r\n//         });\r\n//     }\r\n//     deleteHandler = ()=>{\r\n//         this.props.deleteClick(this.props.id);\r\n//     }\r\n//     addClickHandler = () =>{\r\n//         // State Does Not update Soon as asynchronous for that we have to write callback of updated state\r\n//         this.setState({activePopup : true},()=>{\r\n//             this.props.addClick(this.props.id,this.props.studentName,this.state.activePopup,this.state.editStudentMarksMode)\r\n//         });\r\n//     }\r\n//     render() {\r\n//         let eachChild = (\r\n//             <tr key={this.props.id}>\r\n//                 <td>{`enrol${this.props.id}`}</td>\r\n//                 <td>{this.props.studentName}</td>\r\n//                 <td>{this.props.gender}</td>\r\n//                 <td>{this.props.address}</td>\r\n//                 <td>{this.props.country}</td>\r\n//                 <td>{this.props.state}</td>\r\n//                 <td>{this.props.city}</td>\r\n//                 <td>{this.props.mobileNumber}</td>\r\n//                 <td>{this.props.email}</td>\r\n//                 <td>\r\n//                     <button className=\"btn btn-outline-primary btn-sm\" onClick = {this.editHandler}>Edit</button>\r\n//                     <button className=\"btn btn-outline-primary btn-sm\" onClick = {this.deleteHandler}>Delete</button>\r\n//                     <button className=\"btn btn-outline-primary btn-sm\" disabled = {this.state.addButtonDisable} onClick = {this.addClickHandler}>Add Marks</button>\r\n//                 </td>\r\n//             </tr>\r\n//         )\r\n//         return (\r\n//             <>\r\n//                 <tbody>\r\n//                     {eachChild}\r\n//                 </tbody>\r\n//             </>\r\n//         )\r\n//     }\r\n// }","export const INIT = \"INIT\";\r\nexport const SUCC = \"SUCC\";\r\nexport const STUDENT_DETAIL_SUBMIT_INIT = \"STUDENT_DETAIL_SUBMIT_INIT\";\r\nexport const STUDENT_DETAIL_SUBMIT_SUCCESS = \"STUDENT_DETAIL_SUBMIT_SUCCESS\";\r\nexport const EDIT_STUDENT_DETAIL_INIT = \"EDIT_STUDENT_DETAIL_INIT\";\r\nexport const EDIT_STUDENT_DETAIL_SUCCESS = \"EDIT_STUDENT_DETAIL_SUCCESS\";\r\nexport const DELETE_STUDENT_DETAIL_INIT = \"DELETE_STUDENT_DETAIL_INIT\";\r\nexport const DELETE_STUDENT_DETAIL_SUCCESS = \"DELETE_STUDENT_DETAIL_SUCCESS\";\r\n\r\n\r\nexport const initilizerHandler =()=>{\r\n    return{\r\n        type : INIT      \r\n    }\r\n}\r\nexport const submitFormHandler = (editStudentDetailMode,studentDetailObject) =>{\r\n    return{\r\n        type : STUDENT_DETAIL_SUBMIT_INIT,\r\n        editStudentDetailMode:editStudentDetailMode,\r\n        studentDetailObject:studentDetailObject\r\n    }\r\n}\r\nexport const submitFormHandlerSuccess = (schoolApp) =>{\r\n    return{\r\n        type : STUDENT_DETAIL_SUBMIT_SUCCESS,\r\n        editStudentDetailMode : schoolApp.editStudentDetailMode,\r\n        studentDetail : schoolApp.studentDetail,\r\n        editStudentDetailModeObject : schoolApp.editStudentDetailModeObject\r\n    }\r\n}\r\nexport const editStudentDetailHandler = (id,editStudentDetailMode) =>{\r\n    return{\r\n        type:EDIT_STUDENT_DETAIL_INIT,\r\n        id : id,\r\n        editStudentDetailMode : editStudentDetailMode\r\n    }\r\n}\r\n\r\nexport const editStudentDetailHandlerSuccess = (schoolApp) =>{\r\n    return{\r\n        type:EDIT_STUDENT_DETAIL_SUCCESS,\r\n        editStudentDetailMode : schoolApp.editStudentDetailMode,\r\n        editStudentDetailModeObject : schoolApp.editStudentDetailModeObject\r\n    }\r\n}\r\n\r\nexport const deleteStudentDetailHandler = (id) =>{\r\n    return{\r\n        type:DELETE_STUDENT_DETAIL_INIT,\r\n        id:id\r\n    }\r\n}\r\n\r\nexport const deleteStudentDetailHandlerSuccess = (schoolApp) =>{\r\n    return{\r\n        type:DELETE_STUDENT_DETAIL_SUCCESS,\r\n        studentDetail : schoolApp.studentDetail\r\n    }\r\n}\r\n\r\nconst initialState = {\r\n\r\n    editStudentDetailMode : false,\r\n    editStudentDetailModeObject : {},\r\n    editStudentMarksMode:false,\r\n    studentDetail : [],\r\n    initState : null,\r\n    addStudentMarkObject: {}\r\n}\r\nconst reducer = (state=initialState,action) => {\r\n    switch(action.type){\r\n        case STUDENT_DETAIL_SUBMIT_SUCCESS : \r\n        return{\r\n            ...state,\r\n            editStudentDetailMode : action.editStudentDetailMode,\r\n            studentDetail : action.studentDetail,\r\n            editStudentDetailModeObject : action.editStudentDetailModeObject\r\n        }\r\n        case EDIT_STUDENT_DETAIL_SUCCESS : \r\n        return{\r\n            ...state,\r\n            editStudentDetailMode : action.editStudentDetailMode,\r\n            editStudentDetailModeObject : action.editStudentDetailModeObject\r\n        }\r\n        case DELETE_STUDENT_DETAIL_SUCCESS : \r\n        return{\r\n            ...state,\r\n            studentDetail : action.studentDetail\r\n        }\r\n\r\n        default : \r\n        return state\r\n    }\r\n}\r\n\r\nexport default reducer\r\n","import React from 'react'\r\nimport StudentList from \"./StudentList/StudentList\";\r\nimport * as formAction from \"../../Store/Redux/reducer\"\r\nimport * as markAction from \"../../Store/Redux/MarkReducer\";\r\nimport { useDispatch} from \"react-redux\";\r\nimport \"./StudentSummary.css\";\r\n\r\nconst StudentSummary = (props) =>{\r\n    const dispatch = useDispatch();\r\n    \r\n    let student = (\r\n        props.studentDetail.map(details =>{\r\n            return(\r\n                <StudentList \r\n                key = {details.id}\r\n                id = {details.id}\r\n                studentName = {`${details.firstName} ${details.lastName}`}\r\n                gender = {details.gender}\r\n                address = {details.street}\r\n                country = {details.country}\r\n                state = {details.state}\r\n                city = {details.city}\r\n                mobileNumber = {details.mobileNumber}\r\n                email = {details.email}\r\n                editClick = {(id,editStudentDetailMode)=>{dispatch(formAction.editStudentDetailHandler(id,editStudentDetailMode))}}\r\n                deleteClick = {(id)=>{dispatch(formAction.deleteStudentDetailHandler(id))}}\r\n                addClick = {(id,studentName,activePopup,editMarkMode)=>{dispatch(markAction.addMarkDetailHandler(id,studentName,activePopup,editMarkMode))}}\r\n            \r\n            />\r\n            )\r\n        })\r\n    )\r\n    return (\r\n        <div className=\"StudentSummary\">\r\n             <h1>Student Summary </h1>\r\n             <table className=\"table table-striped\">\r\n             <thead>\r\n                <tr>\r\n                    <th>Id</th>\r\n                    <th>Student Name</th>\r\n                    <th>Gender</th>\r\n                    <th>Address</th>\r\n                    <th>Country</th>\r\n                    <th>State</th>\r\n                    <th>City</th>\r\n                    <th>Mobile Number</th>\r\n                    <th>E-mail</th>\r\n                    <th>Action</th>\r\n                </tr>\r\n            </thead>\r\n               {student}\r\n             </table>\r\n        </div>\r\n    )\r\n}\r\n\r\nexport default StudentSummary;","import React from 'react';\r\nimport { useDispatch } from \"react-redux\";\r\nimport * as markAction from \"../../Store/Redux/MarkReducer\";\r\n\r\nconst MarkSummary = (props) =>{\r\n     const dispatch = useDispatch();\r\n\r\n    const editStudentMark=(details,index,key) =>{\r\n     const editMarkMode = true;\r\n        dispatch(markAction.editStudentMarkInit(details,editMarkMode))\r\n    }\r\n    console.log(props.markDetail)\r\n        let markSummary = (\r\n\r\n           props.markDetail.map(details =>{\r\n                return(\r\n                    <div className=\"col-sm-6\" key ={details.studentId}>\r\n                    <div className=\"card\">\r\n                        <div className=\"card-body\">\r\n                            <h5 className=\"card-title\">{`${details.studentName} Mark's`}</h5>\r\n                            <table className=\"table table-striped\">\r\n                                <thead>\r\n                                    <tr>\r\n                                        <th>Sr.No</th>\r\n                                        <th>Subject</th>\r\n                                        <th>Marks</th>\r\n                                    </tr>\r\n                                </thead>\r\n                                <tbody>\r\n                                    {details.marks.map(score => {\r\n                                        return (\r\n                                        <tr key = {score.id}>\r\n                                            <td>{score.id}</td>\r\n                                            <td>{score.subject}</td>\r\n                                            <td>{score.markObtained}</td>\r\n                                        </tr>\r\n                                        )\r\n                                    })}\r\n                                </tbody>\r\n                            </table>\r\n                            <button className=\"btn btn-outline-primary\" onClick ={(index,key)=>editStudentMark(details,index,key)}>Edit</button>\r\n                        </div>\r\n                    </div>\r\n                </div>\r\n                )\r\n            })\r\n           \r\n        )\r\n        return (\r\n            <div className=\"mt-5\">\r\n                <h3>Student Marks Summary</h3>\r\n                <div className=\"row\">\r\n                    {markSummary}\r\n                </div>\r\n            </div>\r\n        )\r\n       \r\n}\r\nexport default MarkSummary;","import React, { useEffect } from 'react'\r\n// import {connect} from \"react-redux\";\r\nimport { useDispatch, useSelector } from \"react-redux\";\r\nimport StudentForm from \"../Component/StudentForm/StudentForm\"\r\nimport MarkDetail from \"../Component/MarkDetail/MarkDetail\"\r\nimport StudentSummary from \"../Component/StudentSummary/StudentSummary\"\r\nimport MarkSummary from \"../Component/MarkSummary/MarkSummary\";\r\nimport \"../../node_modules/bootstrap/dist/css/bootstrap.min.css\";\r\nimport * as formAction from \"../Store/Redux/reducer\";\r\n\r\nconst SchoolForm = ()=>{\r\n    const editStudentDetailMode = useSelector(state => state.reducer.editStudentDetailMode);\r\n    const editStudentDetailModeObject = useSelector(state => state.reducer.editStudentDetailModeObject);\r\n    const studentDetail = useSelector(state => state.reducer.studentDetail);\r\n    const initState = useSelector(state => state.reducer.initState);\r\n    \r\n    \r\n    const editMarkMode = useSelector(state => state.MarkReducer.editMarkMode);\r\n    const activePopup = useSelector(state =>state.MarkReducer.activePopup);\r\n    const studentMarkObject = useSelector(state =>state.MarkReducer.studentMarkObject);\r\n    const studentId = useSelector(state =>state.MarkReducer.studentId);\r\n    const studentName = useSelector(state =>state.MarkReducer.studentName);\r\n    const markDetail = useSelector(state =>state.MarkReducer.markDetail);\r\n    const dispatch = useDispatch();\r\n\r\n   useEffect(() => {\r\n    dispatch(formAction.initilizerHandler());\r\n   },[dispatch]);\r\n   return(\r\n\r\n    <div className=\"container px-5\">\r\n    <h2 className = \"pl-lg-5\">School Admission Form</h2>\r\n    <StudentForm \r\n    submitForm = {(editStudentDetailMode,studentDetailObject)=>{dispatch(formAction.submitFormHandler(editStudentDetailMode,studentDetailObject))}}\r\n    editStudentDetailMode = {editStudentDetailMode} \r\n    editStudentDetailModeObject ={editStudentDetailModeObject}\r\n    initState = {initState}\r\n    />\r\n    {studentDetail.length !== 0 ? \r\n    <StudentSummary \r\n    studentDetail = {studentDetail}\r\n    /> : \r\n    null }\r\n    {activePopup ? \r\n    <MarkDetail\r\n     activePopup = {activePopup}\r\n     studentId = {studentId}\r\n     studentName = {studentName}   \r\n     editMarkMode = {editMarkMode}\r\n     studentMarkObject = {studentMarkObject}\r\n     /> : null}\r\n     {markDetail.length !== 0 ? \r\n    <MarkSummary\r\n     markDetail = {markDetail}\r\n\r\n    /> : null}\r\n</div>\r\n   )\r\n}\r\nexport default SchoolForm;","import './App.css';\nimport SchoolForm from './Container/SchoolForm';\n\nfunction App() {\n  return (\n    <div className=\"App\" >\n      <SchoolForm/>\n    </div>\n  );\n}\n\nexport default App;\n","const reportWebVitals = onPerfEntry => {\n  if (onPerfEntry && onPerfEntry instanceof Function) {\n    import('web-vitals').then(({ getCLS, getFID, getFCP, getLCP, getTTFB }) => {\n      getCLS(onPerfEntry);\n      getFID(onPerfEntry);\n      getFCP(onPerfEntry);\n      getLCP(onPerfEntry);\n      getTTFB(onPerfEntry);\n    });\n  }\n};\n\nexport default reportWebVitals;\n","import {combineReducers} from \"redux\";\r\nimport reducer from \"./reducer\";\r\nimport MarkReducer from \"./MarkReducer\";\r\n\r\nexport default combineReducers({\r\n    reducer,MarkReducer\r\n})","import { put } from \"redux-saga/effects\";\r\nimport * as actionType from \"../Redux/reducer\";\r\nimport * as actionMarkType from \"../Redux/MarkReducer\";\r\n\r\nexport function* initilizerHandlerSaga() {\r\n    window.localStorage.clear();\r\n    const schoolApp = {\r\n        editStudentDetailMode: false,\r\n        editStudentDetailModeObject: {},\r\n        studentDetail: [],\r\n      \r\n    }\r\n    const markApp = {\r\n        activePopup : false,\r\n        studentMarkObject : {},\r\n        editMarkMode : false,\r\n        markDetail : [],\r\n        studentId : \"\",\r\n        studentName : \"\"\r\n    }\r\n    yield localStorage.setItem(\"schoolApp\", JSON.stringify(schoolApp));\r\n    yield localStorage.setItem(\"markApp\",JSON.stringify(markApp));\r\n}\r\n\r\nexport function* submitFormHandlerSaga(action) {\r\n    const localValue = JSON.parse(localStorage.getItem(\"schoolApp\"));\r\n    const updateValue = { ...localValue };\r\n    if (action.studentDetailObject.id !== null && action.editStudentDetailMode === true) {\r\n        const editObjIndex = updateValue.studentDetail.findIndex(student => student.id === action.studentDetailObject.id)\r\n        updateValue.studentDetail[editObjIndex] = action.studentDetailObject;\r\n        updateValue.editStudentDetailModeObject = {};\r\n    }\r\n    else {\r\n        let studentLast = null;\r\n        if (updateValue.studentDetail.length !== 0) {\r\n            const expenseLastItem = updateValue.studentDetail[updateValue.studentDetail.length - 1];\r\n            studentLast = +expenseLastItem.id;\r\n        }\r\n        else {\r\n            studentLast = 0;\r\n        }\r\n        const studentDetailObject = action.studentDetailObject;\r\n        studentDetailObject.id = studentLast + 1;\r\n        updateValue.studentDetail.push(studentDetailObject);\r\n    }\r\n    updateValue.editStudentDetailMode = false;\r\n    yield localStorage.setItem(\"schoolApp\", JSON.stringify(updateValue));\r\n    yield put(actionType.submitFormHandlerSuccess(updateValue));\r\n}\r\n\r\nexport function* editStudentDetailHandlerSaga(action) {\r\n    const localValue = JSON.parse(localStorage.getItem(\"schoolApp\"));\r\n    const updateValue = { ...localValue };\r\n    updateValue.editStudentDetailMode = action.editStudentDetailMode\r\n    const editObj = updateValue.studentDetail.find(student => student.id === action.id);\r\n    updateValue.editStudentDetailModeObject = editObj;\r\n    yield localStorage.setItem(\"schoolApp\", JSON.stringify(updateValue));\r\n    yield put(actionType.editStudentDetailHandlerSuccess(updateValue));\r\n\r\n}\r\n\r\nexport function* deleteStudentDetailHandlerSaga(action) {\r\n    const localValue = JSON.parse(localStorage.getItem(\"schoolApp\"));\r\n    const updateValue = { ...localValue };\r\n\r\n    const localMarkValue = JSON.parse(localStorage.getItem(\"markApp\"));\r\n    const updateMarkValue = { ...localMarkValue };\r\n\r\n    if(updateMarkValue.markDetail.length !== 0){\r\n        const editObjIndex = updateMarkValue.markDetail.findIndex(student => student.studentId === action.id);\r\n        updateMarkValue.markDetail.splice(editObjIndex, 1);\r\n        yield localStorage.setItem(\"markApp\", JSON.stringify(updateMarkValue));\r\n        yield put(actionMarkType.addMarkToStudentSuccess(updateMarkValue));\r\n\r\n    }\r\n        const editObjIndex = updateValue.studentDetail.findIndex(student => student.id === action.id);\r\n        updateValue.studentDetail.splice(editObjIndex, 1);\r\n    \r\n    yield localStorage.setItem(\"schoolApp\", JSON.stringify(updateValue));\r\n    yield put(actionType.deleteStudentDetailHandlerSuccess(updateValue));\r\n\r\n}\r\n\r\n","import { put } from \"redux-saga/effects\";\r\nimport * as actionMarkType from \"../Redux/MarkReducer\";\r\n\r\nexport function* addMarkDetailHandlerSaga(action) {\r\n    // const localStudentValue = JSON.parse(localStorage.getItem(\"schoolApp\"));\r\n    // const studentDetailFromStorage = { ...localStudentValue };\r\n    const localMarkValue = JSON.parse(localStorage.getItem(\"markApp\"));\r\n    const updateValue = { ...localMarkValue };\r\n    updateValue.activePopup = action.activePopup;\r\n    updateValue.editMarkMode = action.editMarkMode;\r\n    yield localStorage.setItem(\"markApp\", JSON.stringify(updateValue));\r\n    yield put(actionMarkType.addMarkDetailHandlerSuccess(updateValue,action.id,action.studentName));\r\n}\r\n\r\nexport function* addMarkToStudentSaga(action){\r\n    const localMarkValue = JSON.parse(localStorage.getItem(\"markApp\"));\r\n    const updateValue = { ...localMarkValue };\r\n    if(action.editMarkMode){\r\n        const editObjIndex = updateValue.markDetail.findIndex(mark => mark.studentId === action.markObject.studentId)\r\n        updateValue.markDetail[editObjIndex] = action.markObject;\r\n    }\r\n    else{\r\n        updateValue.markDetail.push(action.markObject);\r\n    }\r\n    updateValue.studentMarkObject = {};\r\n    updateValue.studentId = \"\";\r\n    updateValue.studentName = \"\";\r\n    updateValue.activePopup = false;\r\n    updateValue.editMarkMode = false;\r\n    yield localStorage.setItem(\"markApp\", JSON.stringify(updateValue));\r\n    yield put(actionMarkType.addMarkToStudentSuccess(updateValue));\r\n}\r\n\r\nexport function* editStudentMarkSaga(action) {\r\n    const localMarkValue = JSON.parse(localStorage.getItem(\"markApp\"));\r\n    const updateValue = { ...localMarkValue };\r\n    // const editMarkObj = updateValue.markDetail.find(student => student.studentId === action.editObject.studentId);\r\n\r\n    updateValue.studentMarkObject = action.editObject;\r\n    updateValue.editMarkMode = true;\r\n    updateValue.activePopup = true;\r\n    updateValue.studentId = action.editObject.studentId;\r\n    updateValue.studentName =action.editObject.studentName;\r\n    \r\n    yield localStorage.setItem(\"markApp\", JSON.stringify(updateValue));\r\n    yield put(actionMarkType.editStudentMarkSuccess(updateValue));  \r\n}","import { takeLatest } from \"@redux-saga/core/effects\";\r\nimport * as actionType from \"../Redux/reducer\";\r\nimport * as actionMarkType from \"../Redux/MarkReducer\";\r\nimport {initilizerHandlerSaga,submitFormHandlerSaga,editStudentDetailHandlerSaga,deleteStudentDetailHandlerSaga} from \"./saga\";\r\nimport {addMarkDetailHandlerSaga,addMarkToStudentSaga,editStudentMarkSaga} from \"./MarkSaga\";\r\n\r\nexport function* watch(){\r\n    yield takeLatest(actionType.INIT,initilizerHandlerSaga);\r\n    yield takeLatest(actionType.STUDENT_DETAIL_SUBMIT_INIT,submitFormHandlerSaga);\r\n    yield takeLatest(actionType.EDIT_STUDENT_DETAIL_INIT,editStudentDetailHandlerSaga);\r\n    yield takeLatest(actionType.DELETE_STUDENT_DETAIL_INIT,deleteStudentDetailHandlerSaga);\r\n    yield takeLatest(actionMarkType.ADD_MARK_DETAIL_INIT,addMarkDetailHandlerSaga);\r\n    yield takeLatest(actionMarkType.SUBMIT_BUTTON_HANDLER_INIT,addMarkToStudentSaga)\r\n    yield takeLatest(actionMarkType.EDIT_MARK_INIT,editStudentMarkSaga);\r\n\r\n\r\n}\r\n","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport './index.css';\nimport App from './App';\nimport reportWebVitals from './reportWebVitals';\n\nimport {Provider} from \"react-redux\";\nimport {createStore,applyMiddleware,compose} from \"redux\";\nimport rootReducer from \"./Store/Redux/index\";\n\nimport {watch} from \"./Store/Saga/index\";\n\nimport createSagaMiddleware from \"redux-saga\";\n\nconst sagaMiddleware = createSagaMiddleware();\n\nconst composeEnhancers = window.__REDUX_DEVTOOLS_EXTENSION_COMPOSE__ || compose;\n\nconst store = createStore(rootReducer,composeEnhancers(applyMiddleware(sagaMiddleware)));\n\nsagaMiddleware.run(watch);\n\nReactDOM.render(\n  <Provider store = {store}>\n    <App />\n   </Provider>\n  ,\n  document.getElementById('root')\n);\n\n// If you want to start measuring performance in your app, pass a function\n// to log results (for example: reportWebVitals(console.log))\n// or send to an analytics endpoint. Learn more: https://bit.ly/CRA-vitals\nreportWebVitals();\n"],"sourceRoot":""}